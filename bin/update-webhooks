#!/usr/bin/env node
const mongoose = require('mongoose');
const chalk = require('chalk');

const gh = require('../helpers/github');
const Repository = require('../models/Repository');
const User = require('../models/User');

mongoose.Promise = global.Promise;
mongoose.connect(process.env.MONGODB_URI || process.env.MONGOLAB_URI);
mongoose.connection.on('error', () => {
  console.log('%s MongoDB connection error :(', chalk.red('âœ—'));
  process.exit(-1);
});

const run = async () => {
  const repositories = await Repository.find({ enabled: true });

  return repositories.reduce((promise, repository) => {
    return promise.then(async () => {
      console.log(`Updating ${chalk.green(repository.name)}`);

      return User
        .findOne({ _id: repository.enabled_by.user_id })
        .then((user) => {
          console.log(`--> found user ${user.github_login}`);

          return gh.auth(user)
            .repos.editHook(
              gh.getExistingWebhookConfig(
                repository.github_hook_id,
                repository.owner,
                repository.name,
                true
              )
            )
            .then(() => console.log('--> OK'))
            .catch(err => console.log(`--> KO (${err})`))
          ;
        });
    });
  }, Promise.resolve());
};

run().then(() => {
  mongoose.connection.close();
  process.exit();
});
